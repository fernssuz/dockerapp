import java.text.SimpleDateFormat

static def buildTime(){
    final dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ssZ")
    dateFormat.timeZone = TimeZone.getTimeZone('GMT')
    dateFormat.format(new Date())
}

plugins {
    id 'org.springframework.boot' version '2.4.0'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    id 'maven-publish'
    id "com.palantir.docker" version "0.25.0"
}

group = 'sg'
if(!project.hasProperty('BUILD_NUMBER')){
    version = "0.0.1-SNAPSHOT"
}else{
    version= "1.${BUILD_NUMBER}"
}



/**
 * This updates the Spring boot actuator indo endpoint with bersion and other user info
 */
springBoot {
    buildInfo{
        properties {
            //Generate extra build info
            additional = [
                    name       : 'docker-app',
                    description: 'This project is all about Spinning new services and keeping the SpringBoot/Gradle and other libraries uptodate',
                    //Override buildInfo time
                    time       :  buildTime()
            ]
        }
    }
}

// The repositories block indicates that the build should resolve its dependencies from the
// Maven Central repository. Gradle leans heavily on many conventions and facilities
// established by the Maven build tool, including the option of using Maven Central as a
// source of library dependencies.

// tag::repositories[]
repositories {
    mavenCentral()
}
// end::repositories[]

configurations {
    [apiElements, runtimeElements].each{
        it.outgoing.artifacts.removeIf { it.buildDependencies.getDependencies(null).contains(jar)}
        it.outgoing.artifact(bootJar)
        }
    }

sourceCompatibility = 11
targetCompatibility = 11

// tag::dependencies[]
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.apache.commons:commons-lang3:3.9'

    compile "org.springframework.boot:spring-boot-starter-security"

    implementation 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'


    //Required dependencies for compiling the project code, but that will be provided
    // at runtime by a container running the code (for example, the Java Servlet API)
    implementation "joda-time:joda-time:2.2"
    //Dependencies used for compiling and running tests, but not required for building
    // or running the project’s runtime code.
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.3.1"
}
// end::dependencies[]

//Finally, let’s specify the name for our JAR artifact.
// tag::jar[]
/*jar {
   enabled=true
}*/
// end::jar[]


// tag::wrapper[]
wrapper {
    gradleVersion = '6.7.1'
}
// end::wrapper[]

docker {
    name "${project.name}:${project.version}"
    dockerfile file('docker/Dockerfile')
    files 'docker/entrypoint.sh', "$buildDir/libs/"
}


publishing{
    publications {
        maven(MavenPublication) {
            groupId 'sg'
            artifactId 'docker-app'
            artifact jar
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
        }
    }
        repositories {
            maven{
                url "${buildDir}/repo"
            }
        }
}